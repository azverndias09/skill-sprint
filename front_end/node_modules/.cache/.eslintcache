[{"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\index.js":"1","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\reportWebVitals.js":"2","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\home.js":"3","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\numbers.js":"4","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\login.js":"5","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\chat.js":"6","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\register.js":"7","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\email.js":"8","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\dashboard.js":"9","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\reset.js":"10","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\materialchat.js":"11"},{"size":1606,"mtime":1693332789139,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1692370692112,"results":"14","hashOfConfig":"13"},{"size":7280,"mtime":1693381118214,"results":"15","hashOfConfig":"13"},{"size":859,"mtime":1692370692112,"results":"16","hashOfConfig":"13"},{"size":9883,"mtime":1693380192226,"results":"17","hashOfConfig":"13"},{"size":961,"mtime":1693293792643,"results":"18","hashOfConfig":"13"},{"size":15692,"mtime":1693381127665,"results":"19","hashOfConfig":"13"},{"size":979,"mtime":1692632261327,"results":"20","hashOfConfig":"13"},{"size":8613,"mtime":1692730187925,"results":"21","hashOfConfig":"13"},{"size":6798,"mtime":1693380936387,"results":"22","hashOfConfig":"13"},{"size":6100,"mtime":1693327855656,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"nab4ws",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":1,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\index.js",["61"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport './index.css';\r\n//import App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport Login from \"./pages/login\";\r\nimport Register from \"./pages/register\";\r\n\r\nimport Numbers from \"./pages/numbers\";\r\nimport Home from \"./pages/home\";\r\nimport Chat from \"./pages/chat\";\r\nimport Email from \"./pages/email\";\r\nimport Reset from \"./pages/reset\";\r\n//import MaterialChat from \"./pages/materialchat\";\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/*\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/reset\" element={<Reset />} />\r\n        <Route path=\"/home\" element={<Home />} />\r\n        <Route path=\"/chat\" element={<Chat />} />\r\n        <Route path=\"/email\" element={<Email />} />\r\n        <Route path=\"/numbers\" element={<Numbers />} />\r\n        {/* <Route path=\"/materialchat\" element={<MaterialChat />}/> */}\r\n\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nconst root = createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\reportWebVitals.js",[],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\home.js",[],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\numbers.js",[],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\login.js",["62","63","64","65","66","67","68"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n//  import Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { lightBlue } from '@mui/material/colors';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                SkillSprint\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst customTheme = createTheme({\r\n    typography: {\r\n        fontFamily: 'Poppins, sans-serif',\r\n        body2: {\r\n            color: '#69c2bf', // Set the color for the h4 variant\r\n        },\r\n    },\r\n    palette: {\r\n        mode: 'dark',\r\n        primary: {\r\n            main: '#82cbe8', // Set primary color to white\r\n        },\r\n        background: {\r\n            default: '#0f0926',\r\n            paper: '#000003',\r\n        },\r\n        text: {\r\n            primary: '#ffffff', // Set primary text color to white\r\n        },\r\n    },\r\n\r\n   \r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    whiteText: {\r\n        color: 'white',\r\n    },\r\n\r\n    \r\n    whiteTextField: {\r\n        '& .MuiInputBase-input': {\r\n            color: 'white',\r\n        },\r\n    },\r\n\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [user, setUser] = useState();\r\n    const [loginError, setLoginError] = useState(null);\r\n    const classes = useStyles();\r\n\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem('user');\r\n        const data = JSON.parse(localStorage.getItem('user'));\r\n        console.log(data);\r\n        if (loggedInUser) {\r\n            const foundUser = JSON.parse(loggedInUser);\r\n            setUser(foundUser);\r\n            console.log(loggedInUser);\r\n            setUser({});\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            navigate(\"/home\");\r\n        }\r\n    }, []);\r\n\r\n\r\n    const handleLogin = async () => {\r\n\r\n        // if (username === 'user' && password === 'password') {\r\n        //     setIsLoggedIn(true);\r\n        // }\r\n\r\n        const response = await fetch('http://localhost:3001/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n\r\n        });\r\n\r\n        // console.log(response);\r\n         if (response.ok) {\r\n        if (true) {\r\n            console.log(\"login done brother\");\r\n            setIsLoggedIn(true);\r\n            let userData = { username, password };\r\n            setUser(userData);\r\n\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            console.log(userData);\r\n        }\r\n        else {\r\n            console.error(\"no bro check code\");\r\n        }\r\n        // console.log(response);\r\n    };\r\n\r\n\r\n    // const handleLogin = async (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     const response = await fetch('http://localhost:3001/login', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json',\r\n    //         },\r\n    //         body: JSON.stringify({ username, password }),\r\n    //     });\r\n\r\n\r\n        // const simulatedResponses = {\r\n        //     success: { status: 200 },\r\n        //     passwordIncorrect: { status: 302 },\r\n        //     userNotFound: { status: 301 },\r\n        //     error: { status: 500 },\r\n        // };\r\n\r\n        // const response = simulatedResponses.success;\r\n        if (!loginError) {\r\n            if (response.status === 200) {\r\n                console.log(\"Logged in successfully\");\r\n                setIsLoggedIn(true);\r\n                let userData = { username, password };\r\n                setUser(userData);\r\n                localStorage.setItem('user', JSON.stringify(userData));\r\n                navigate(\"/home\");\r\n            } else if (response.status === 302) {\r\n\r\n                console.error(\"Password is incorrect\");\r\n                setLoginError(\"Password is incorrect\");\r\n            } else if (response.status === 301) {\r\n                console.error(\"User doesn't exist\");\r\n                setLoginError(\"User doesn't exist\");\r\n            } else {\r\n                console.error(\"Error during login\");\r\n                setLoginError(\"Error during login\");\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={customTheme}>\r\n\r\n            <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={4}\r\n                    md={7}\r\n                    sx={{\r\n                        display: 'flex',          // Use flexbox for vertical and horizontal centering\r\n                        flexDirection: 'column',  // Align items vertically\r\n                        justifyContent: 'center', // Center vertically\r\n                        alignItems: 'center',\r\n                        backgroundImage: 'url(/giphy.gif)',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        // backgroundColor: (t) =>\r\n                        //     t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                    }}\r\n                    >\r\n                <Box\r\n                        component=\"img\"\r\n                        sx={{\r\n                            height: 230,\r\n                            width: '100%',\r\n                            // objectFit: 'cover',\r\n                            // maxHeight: { xs: 233, md: 167 },\r\n                            // maxWidth: { xs: 400, md: 250 },\r\n                            // textAlign: 'center',\r\n                        }}\r\n                        alt=\"The house from the offer.\"\r\n                        src=\"/skillsprint.png\"\r\n                    />\r\n                </Grid>\r\n\r\n                \r\n                <Grid item xs={12} sm={8} md={5}  elevation={6} square \r\n                // sx={{\r\n                //     backgroundColor:'#ebf4f7',\r\n                // }} \r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n\r\n                        <Typography component=\"h1\" variant=\"h4\" className={classes.whiteText}>Login</Typography>\r\n                        <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n\r\n\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n\r\n\r\n                            {loginError && <Alert severity=\"error\" sx={{ mb: 2 }}>{loginError}</Alert>}\r\n                            <Button type=\"button\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }} onClick={handleLogin}>\r\n                                Login\r\n                            </Button>\r\n\r\n                            <Grid container>\r\n                                <Grid item xs>\r\n                                    <Link to=\"/reset\" variant=\"body2\">\r\n                                        Forgot password?\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Link to=\"/register\" variant=\"body2\">\r\n                                        {\"Don't have an account? Sign Up\"}\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Copyright sx={{ mt: 5 }} />\r\n\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Login;\r\n","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\chat.js",["69","70","71"],[],"import io from 'socket.io-client'\r\nimport { useEffect, useState } from 'react';\r\n//const socket = io.connect(\"http://localhost:3001\");\r\n\r\nconst Chat = () => {\r\n\r\n//     const [message, setMessage] = useState(\"\");\r\n//     const [messageReceived, setMessageReceived] = useState(\"\");\r\n\r\n//     const sendMessage = () => {\r\n//      //   console.log(\"button pressed\");\r\n//         socket.emit(\"send_message\", { message });\r\n\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         socket.on(\"receive_message\", (data) => {\r\n//             setMessageReceived(data.message);\r\n//         })\r\n//     }, [socket])\r\n\r\n    \r\n//     return (<div className=\"chatpage\">\r\n\r\n//         <input placeholder=\"message\" onChange={(event) => {\r\n//             setMessage(event.target.value);\r\n//         }} />\r\n//         <button onClick={sendMessage}> send</button>\r\n//         <h1>Message:</h1>\r\n//         {messageReceived}\r\n//     </div>);\r\n// };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default Chat;    ","C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\register.js",["72","73","74","75"],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\email.js",[],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\dashboard.js",["76"],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\reset.js",["77","78","79","80","81"],[],"C:\\Users\\jason\\Documents\\VS Code Programs\\skill-sprint\\front_end\\src\\pages\\materialchat.js",["82","83","84","85","86","87","88"],[],{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":24},{"ruleId":"89","severity":1,"message":"94","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":16},{"ruleId":"89","severity":1,"message":"95","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":13},{"ruleId":"89","severity":1,"message":"96","line":18,"column":10,"nodeType":"91","messageId":"92","endLine":18,"endColumn":19},{"ruleId":"89","severity":1,"message":"97","line":81,"column":12,"nodeType":"91","messageId":"92","endLine":81,"endColumn":22},{"ruleId":"89","severity":1,"message":"98","line":82,"column":12,"nodeType":"91","messageId":"92","endLine":82,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":100,"column":8,"nodeType":"101","endLine":100,"endColumn":10,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"103","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":10},{"ruleId":"89","severity":1,"message":"104","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":19},{"ruleId":"89","severity":1,"message":"105","line":2,"column":21,"nodeType":"91","messageId":"92","endLine":2,"endColumn":29},{"ruleId":"89","severity":1,"message":"106","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":33},{"ruleId":"89","severity":1,"message":"104","line":1,"column":35,"nodeType":"91","messageId":"92","endLine":1,"endColumn":44},{"ruleId":"89","severity":1,"message":"95","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":186,"column":21,"nodeType":"109","messageId":"110","endLine":186,"endColumn":23},{"ruleId":"89","severity":1,"message":"105","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"95","line":10,"column":8,"nodeType":"91","messageId":"92","endLine":10,"endColumn":13},{"ruleId":"89","severity":1,"message":"111","line":74,"column":7,"nodeType":"91","messageId":"92","endLine":74,"endColumn":12},{"ruleId":"89","severity":1,"message":"112","line":83,"column":11,"nodeType":"91","messageId":"92","endLine":83,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":88,"column":34,"nodeType":"109","messageId":"110","endLine":88,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":94,"column":8,"nodeType":"101","endLine":94,"endColumn":30,"suggestions":"113"},{"ruleId":"89","severity":1,"message":"105","line":2,"column":17,"nodeType":"91","messageId":"92","endLine":2,"endColumn":25},{"ruleId":"89","severity":1,"message":"104","line":2,"column":27,"nodeType":"91","messageId":"92","endLine":2,"endColumn":36},{"ruleId":"89","severity":1,"message":"114","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"115","line":3,"column":16,"nodeType":"91","messageId":"92","endLine":3,"endColumn":27},{"ruleId":"89","severity":1,"message":"116","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":11},{"ruleId":"89","severity":1,"message":"117","line":40,"column":7,"nodeType":"91","messageId":"92","endLine":40,"endColumn":11},{"ruleId":"118","severity":2,"message":"119","line":135,"column":16,"nodeType":"91","messageId":"120","endLine":135,"endColumn":28},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Paper' is defined but never used.","'lightBlue' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'io' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'delay' is assigned a value but never used.","'classes' is assigned a value but never used.",["122"],"'Link' is defined but never used.","'useNavigate' is defined but never used.","'Box' is defined but never used.","'Chat' is assigned a value but never used.","no-undef","'MaterialChat' is not defined.","undef",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [navigate]",{"range":"127","text":"128"},"Update the dependencies array to be: [navigate, passwordResetSuccess]",{"range":"129","text":"130"},[2881,2883],"[navigate]",[2372,2394],"[navigate, passwordResetSuccess]"]