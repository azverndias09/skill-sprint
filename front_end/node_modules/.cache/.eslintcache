[{"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\home.js":"3","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\login.js":"4","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\numbers.js":"5","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\chat.js":"6","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\register.js":"7","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\email.js":"8"},{"size":1289,"mtime":1692622077184,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1692287176067,"results":"11","hashOfConfig":"10"},{"size":75,"mtime":1692291731939,"results":"12","hashOfConfig":"10"},{"size":2094,"mtime":1692534056880,"results":"13","hashOfConfig":"10"},{"size":859,"mtime":1692295496959,"results":"14","hashOfConfig":"10"},{"size":885,"mtime":1692459389379,"results":"15","hashOfConfig":"10"},{"size":4732,"mtime":1692629412193,"results":"16","hashOfConfig":"10"},{"size":979,"mtime":1692622041771,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"11jbf5z",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\index.js",["46"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createRoot } from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\n\nimport Numbers from \"./pages/numbers\";\nimport Home from \"./pages/home\";\nimport Chat from \"./pages/chat\";\nimport Email from \"./pages/email\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/*\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/chat\" element={<Chat />} />\n        <Route path=\"/email\" element={<Email />} />\n        <Route path=\"/numbers\" element={<Numbers />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\nconst root = createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\reportWebVitals.js",[],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\home.js",[],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\login.js",["47","48"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const handleLogin = async () => {\r\n\r\n        // if (username === 'user' && password === 'password') {\r\n        //     setIsLoggedIn(true);\r\n        // }\r\n\r\n        const response = await fetch('http://localhost:3001/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n\r\n        });\r\n        console.log(response);\r\n        if (response.ok) {\r\n            console.log(\"login done brother\");\r\n\r\n        }\r\n        else {\r\n            console.error(\"no bro check code\");\r\n        }\r\n        console.log(response);\r\n    };\r\n\r\n    const goToRegister = async () => {\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <div>\r\n                <label>\r\n                    Username:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Password:\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button onClick={handleLogin}>Login</button>\r\n            <h1>Not a user? </h1>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/register\">Register here</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            {isLoggedIn && <p>You are logged in!</p>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\numbers.js",[],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\chat.js",["49"],[],"import io from 'socket.io-client'\r\nimport { useEffect, useState } from 'react';\r\nconst socket = io.connect(\"http://localhost:3001\");\r\n\r\nconst Chat = () => {\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messageReceived, setMessageReceived] = useState(\"\");\r\n\r\n    const sendMessage = () => {\r\n        console.log(\"button pressed\");\r\n        socket.emit(\"send_message\", { message });\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) => {\r\n            setMessageReceived(data.message);\r\n        })\r\n    }, [socket])\r\n\r\n    \r\n    return (<div className=\"chatpage\">\r\n\r\n        <input placeholder=\"message\" onChange={(event) => {\r\n            setMessage(event.target.value);\r\n        }} />\r\n        <button onClick={sendMessage}> send</button>\r\n        <h1>Message:</h1>\r\n        {messageReceived}\r\n    </div>);\r\n};\r\n\r\nexport default Chat;    ","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\register.js",["50"],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\email.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":7,"column":24,"nodeType":"53","messageId":"54","endLine":7,"endColumn":37},{"ruleId":"51","severity":1,"message":"56","line":34,"column":11,"nodeType":"53","messageId":"54","endLine":34,"endColumn":23},{"ruleId":"57","severity":1,"message":"58","line":20,"column":8,"nodeType":"59","endLine":20,"endColumn":16,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":57,"column":21,"nodeType":"63","messageId":"64","endLine":57,"endColumn":23},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'setIsLoggedIn' is assigned a value but never used.","'goToRegister' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"66","fix":"67"},"Update the dependencies array to be: []",{"range":"68","text":"69"},[551,559],"[]"]