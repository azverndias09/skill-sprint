[{"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\home.js":"3","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\numbers.js":"4","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\chat.js":"5","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\email.js":"6","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\register.js":"7","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\login.js":"8","C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\reset.js":"9"},{"size":1476,"mtime":1692718943913,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1692287176067,"results":"12","hashOfConfig":"11"},{"size":457,"mtime":1692736408665,"results":"13","hashOfConfig":"11"},{"size":859,"mtime":1692295496959,"results":"14","hashOfConfig":"11"},{"size":885,"mtime":1692459389379,"results":"15","hashOfConfig":"11"},{"size":979,"mtime":1692622041771,"results":"16","hashOfConfig":"11"},{"size":11440,"mtime":1692738391069,"results":"17","hashOfConfig":"11"},{"size":8074,"mtime":1692738649782,"results":"18","hashOfConfig":"11"},{"size":5823,"mtime":1692733974731,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11jbf5z",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\index.js",["49"],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\reportWebVitals.js",[],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\home.js",["50"],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\numbers.js",[],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\chat.js",["51"],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\email.js",[],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\register.js",["52","53","54","55","56","57","58"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport './AnimatedBackground.css';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nfunction Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                SkillSprint\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nconst customTheme = createTheme({\r\n    typography: {\r\n        fontFamily: 'Roboto, sans-serif',\r\n    },\r\n});\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [generatedOtp, setGeneratedOtp] = useState(null);\r\n    const [testOtp, setTestOtp] = useState('');\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n    const [isPasswordValid, setIsPasswordValid] = useState(null);\r\n    const [focused, setFocused] = useState(false);\r\n    const [hasTypedPassword, setHasTypedPassword] = useState(false);\r\n    const [showOTPInput, setShowOTPInput] = useState(false);\r\n    const [otpVerified, setOtpVerified] = useState(false);\r\n    const [otpVerificationAttempted, setOtpVerificationAttempted] = useState(false);\r\n\r\n    const [user, setUser] = useState();\r\n\r\n\r\n    const handlePasswordChange = (value) => {\r\n        setPassword(value);\r\n        setHasTypedPassword(true);\r\n        setIsPasswordValid(value.length >= 6);\r\n    };\r\n\r\n    const handleEmailChange = (value) => {\r\n        setEmail(value);\r\n        const isValidEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value);\r\n        setEmailError(!isValidEmail);\r\n    };\r\n\r\n\r\n    const handleRegister = async () => {\r\n        // const response = await fetch('http://localhost:3001/register', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //     },\r\n        //     body: JSON.stringify({ name, email, password }),\r\n\r\n        // });\r\n\r\n        // console.log(response);\r\n        //   if (response.ok) {\r\n        if (true) {\r\n            console.log(\"registration done brother\");\r\n\r\n            navigate('/login');\r\n\r\n        }\r\n        else {\r\n            console.error(\"no bro check code\");\r\n        }\r\n        //     console.log(response);\r\n    };\r\n\r\n    // const form = useRef();\r\n\r\n    const sendOTPTest = (e) => {\r\n        const newGeneratedOtp = Math.floor(1000 + Math.random() * 9000);\r\n        setGeneratedOtp(newGeneratedOtp);\r\n        console.log(\"hello\");\r\n        console.log(newGeneratedOtp);\r\n        //e.preventDefault();\r\n        console.log(\"hello\");\r\n        const templateParams = {\r\n            user_name: name,\r\n            user_email: email,\r\n            message: newGeneratedOtp,\r\n        };\r\n\r\n\r\n\r\n        emailjs\r\n            .send('service_5dqwn3h', 'template_309hj8f', templateParams, 'fg0vs7jHRI7Fm0CsK')\r\n            .then(\r\n                (result) => {\r\n\r\n                    setShowOTPInput(true);\r\n                },\r\n                (error) => {\r\n                    //error stuff here\r\n                }\r\n            );\r\n        setShowOTPInput(true);\r\n\r\n    };\r\n\r\n    const handleVerifyOTP = () => {\r\n        if (testOtp == generatedOtp) {\r\n            console.log(\"OTP is correct!\");\r\n            setIsRegistered(true);\r\n            setOtpVerified(true); // Set OTP verification success\r\n        } else {\r\n            console.log(\"OTP is incorrect!\");\r\n            setOtpVerified(false); // Set OTP verification failure\r\n        }\r\n        setOtpVerificationAttempted(true); // Indicate that OTP verification was attempted\r\n    };\r\n\r\n\r\n    return (\r\n        <ThemeProvider theme={customTheme}>\r\n            <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    xs={false}\r\n                    sm={4}\r\n                    md={7}\r\n                    sx={{\r\n                        backgroundImage: 'url(https://source.unsplash.com/random?wallpapers)',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: (t) =>\r\n                            t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                    }}\r\n                />\r\n                <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Register\r\n                        </Typography>\r\n\r\n\r\n                        <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Name\"\r\n                                type=\"text\"\r\n                                name=\"user_name\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            //variant=\"outlined\"\r\n                            />\r\n\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                type=\"text\"\r\n                                name=\"user_email\"\r\n                                value={email}\r\n                                onChange={(e) => handleEmailChange(e.target.value)}\r\n                                //variant=\"outlined\"\r\n                                error={emailError} // Use the emailError state to control error display\r\n                                helperText={emailError ? 'Invalid email address' : ''}\r\n\r\n                            />\r\n\r\n                            <TextField\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => handlePasswordChange(e.target.value)}\r\n                                onFocus={() => setFocused(true)}\r\n                                onBlur={() => setHasTypedPassword(true)}\r\n                                error={emailError || (focused && !isPasswordValid)}\r\n                                helperText={\r\n                                    emailError\r\n                                        ? 'Invalid email address'\r\n                                        : focused && !isPasswordValid\r\n                                            ? 'Password should be at least 6 characters long'\r\n                                            : ''\r\n                                } // Display error message for password after focus\r\n                                disabled={!isRegistered}\r\n                            />\r\n                            {!showOTPInput && (\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={emailError} onClick={sendOTPTest}>\r\n                                    Send OTP\r\n                                </Button>\r\n                            )}\r\n\r\n\r\n\r\n                            {showOTPInput && (\r\n                                <div>\r\n                                    <TextField\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        label=\"Enter OTP\"\r\n                                        variant=\"outlined\"\r\n                                        value={testOtp}\r\n                                        onChange={(e) => setTestOtp(e.target.value)}\r\n                                    />\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleVerifyOTP}>\r\n                                        Verify\r\n                                    </Button>\r\n                                    {otpVerificationAttempted && (\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            style={{ color: otpVerified ? 'green' : 'red', marginTop: '8px' }}\r\n                                        >\r\n                                            {otpVerified ? 'OTP verified successfully' : 'Try again'}\r\n                                        </Typography>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                sx={{ mt: 3, mb: 2 }}\r\n                                onClick={handleRegister}\r\n                                disabled={!isRegistered || emailError || (!isPasswordValid && hasTypedPassword) || (!otpVerified && otpVerificationAttempted)} // Disable the button based on conditions\r\n                            >\r\n                                Register\r\n                            </Button>\r\n\r\n                            <Grid container>\r\n                                <Grid item>\r\n\r\n                                    <Link to=\"/login\" variant='body2'>Already Registered? Login here</Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Copyright sx={{ mt: 5 }} />\r\n                            {isRegistered && <p>You have successfully registered!</p>}\r\n                        </Box>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n\r\n    );\r\n};\r\n\r\nexport default Register;",[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\login.js",["59","60","61","62","63"],[],"C:\\Users\\PC\\Desktop\\DBMS Azvern\\skill-sprint\\front_end\\src\\pages\\reset.js",["64","65","66"],[],{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"71","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":20,"column":8,"nodeType":"74","endLine":20,"endColumn":16,"suggestions":"75"},{"ruleId":"67","severity":1,"message":"76","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":33},{"ruleId":"67","severity":1,"message":"77","line":1,"column":35,"nodeType":"69","messageId":"70","endLine":1,"endColumn":44},{"ruleId":"67","severity":1,"message":"78","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":24},{"ruleId":"67","severity":1,"message":"79","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":16},{"ruleId":"67","severity":1,"message":"80","line":55,"column":12,"nodeType":"69","messageId":"70","endLine":55,"endColumn":16},{"ruleId":"67","severity":1,"message":"81","line":55,"column":18,"nodeType":"69","messageId":"70","endLine":55,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":128,"column":21,"nodeType":"84","messageId":"85","endLine":128,"endColumn":23},{"ruleId":"67","severity":1,"message":"78","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":24},{"ruleId":"67","severity":1,"message":"79","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":16},{"ruleId":"67","severity":1,"message":"86","line":44,"column":12,"nodeType":"69","messageId":"70","endLine":44,"endColumn":22},{"ruleId":"67","severity":1,"message":"80","line":45,"column":12,"nodeType":"69","messageId":"70","endLine":45,"endColumn":16},{"ruleId":"72","severity":1,"message":"87","line":60,"column":8,"nodeType":"74","endLine":60,"endColumn":10,"suggestions":"88"},{"ruleId":"67","severity":1,"message":"89","line":36,"column":7,"nodeType":"69","messageId":"70","endLine":36,"endColumn":12},{"ruleId":"82","severity":1,"message":"83","line":48,"column":34,"nodeType":"84","messageId":"85","endLine":48,"endColumn":36},{"ruleId":"72","severity":1,"message":"87","line":55,"column":8,"nodeType":"74","endLine":55,"endColumn":30,"suggestions":"90"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["91"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isLoggedIn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["92"],"'delay' is assigned a value but never used.",["93"],{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: []",{"range":"100","text":"101"},"Update the dependencies array to be: [navigate]",{"range":"102","text":"103"},"Update the dependencies array to be: [navigate, passwordResetSuccess]",{"range":"104","text":"105"},[551,559],"[]",[2023,2025],"[navigate]",[1712,1734],"[navigate, passwordResetSuccess]"]